@import 'src/css/mixins';

.c-navigation-secondary {

  @include mqAbove($grid-breakpoint-desktop) {
    background: transparent;
  }

  &__list-toggle {
    background: none;
  }

  &__list {
    column-count: 2;
    column-gap: 48px;
    list-style: none;
    width: 248px;

    @include mqAbove($grid-breakpoint-desktop) {
      min-width: 160px;
      top: -9999px; // Push offscreen.
      column-count: 1;
      column-gap: 0;
      opacity: 0;
      transform: translateY(-10px);
      z-index: $z-index-navigation__secondary;
      transition: {
        property: transform, opacity, visibility;
        duration: $transition-duration-navigation,
          $transition-duration-navigation,
          0s;
        timing-function: $transition-timing-function-default;
        delay: 0.025s, 0.025s, 0s;
      }
      visibility: hidden;
      width: auto;

      &,
      &::before {
        background-color: color('white');
        border: 1px solid color('light-gray');
        box-shadow: inset 0 0 0 1px color('white'), inset 0 0 0 2px color('light-gray-alt-2');
      }

      // Top arrow (rotated square).
      &::before {
        position: absolute;
        content: '';
        width: 9px;
        height: 9px;
        top: -5px;
        left: 23px;
        border-bottom: 0;
        border-right: 0;
        transform: rotate(45deg);
      }

      // Cover for arrow.
      &::after {
        position: absolute;
        content: '';
        width: 24px;
        height: 12px;
        top: 0;
        left: 15px;
        border: 0;
        background-color: color('white');
      }
    }

    @include mqAbove($grid-breakpoint-desktop-large) {
      max-width: none;
      min-width: 0;
      opacity: 1;
      transform: none;
      transition: none;
      visibility: visible;
      width: auto;

      &,
      &::before,
      &::after {
        background: none;
        box-shadow: none;
        border: 0;
      }
    }
  }

  &__item,
  &__item-utility {
    column-break-inside: avoid;
    -webkit-column-break-inside: avoid;
  }

  // `:focus` denotes expanded state until React takes over, when we defer to
  // its state, as is available in `.-visible` and `aria-expanded` values.
  &.-visible &__list-toggle,
  &__list-toggle:focus:not([aria-expanded=false]) {
    display: block;
  }

  &.-visible &__list,
  &__list-toggle:focus:not([aria-expanded=false]) ~ &__list {
    opacity: 1;
    transform: none;
    visibility: visible;
    transition: {
      duration: $transition-duration-navigation,
        $transition-duration-navigation,
        0s;
      delay: 0s, 0.025s, 0.025s;
    }

    @include mqAbove($grid-breakpoint-desktop) {
      top: 100%;
      transform: translateY(0);
    }

    @include mqAbove($grid-breakpoint-desktop-large) {
      top: auto;
      transform: none;
    }
  }

  &__search {
    width: 310px;
  }
}

